pipeline {
    agent any

    environment {
        SONARQUBE_TOKEN = 'squ_e59ba776f94d86c62455712e5121c725a5916ba1'
        SONARQUBE_SERVER = 'http://localhost:9000'
        DOCKERHUB_CREDENTIALS = credentials('docker-hub-credentials')
    }

    tools {
        maven 'mvn'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'final', url: 'https://github.com/oussamacharafi99/CO-SCHOOL.git'
            }
        }

        stage('Build and Test') {
            steps {
                dir('CO-SCHOOL-SPRING') {
                    withMaven(maven: 'mvn') {
                        bat 'mvn clean package'
                    }
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('CO-SCHOOL-SPRING') {
                    script {
                        def scannerHome = tool 'SonarQubeScanner'
                        bat "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=co-school -Dsonar.sources=. -Dsonar.host.url=${SONARQUBE_SERVER} -Dsonar.login=${SONARQUBE_TOKEN} -Dsonar.java.binaries=target/classes"
                    }
                }
            }
        }

        stage('Build Docker Images & Push') {
            steps {
                dir('CO-SCHOOL-SPRING') {
                    script {
                        def dockerImage = docker.build("oussamacharafi/co-school-repo:${env.TAG_VERSION ?: 'latest'}")
                        docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                            dockerImage.push()
                        }
                    }
                }
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                dir('CO-SCHOOL-SPRING') {
                    bat 'docker-compose up -d'
                }
            }
        }
    }
}
